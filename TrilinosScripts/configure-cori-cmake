#!/bin/bash

echo ""
echo "WARNING: In order to get modules correctly loaded source this files, don't just execute it."
echo ""
EXTRA_ARGS=$@

echo "EXTRA_ARGS= ${EXTRA_ARGS}"

let OMP_NUM_THREADS=CORES_PER_TEST*HT_PER_CORE
export OMP_NUM_THREADS

# Trilinos Path:
#TRILINOS_PATH=${HOME}/Trilinos

# Top Level Configuration Options
TESTS=${JENKINS_DO_TESTS}
EXAMPLES=${JENKINS_DO_EXAMPLES}

CUDA=${JENKINS_DO_CUDA}
OPENMP=${JENKINS_DO_OPENMP}
PTHREAD=${JENKINS_DO_PTHREAD}
SERIAL=${JENKINS_DO_SERIAL}

COMPLEX=${JENKINS_DO_COMPLEX}


read -r -d '' MUELU_DETAILS <<- EOM
     -D Tpetra_ENABLE_MMM_Timings:BOOL=ON
     -D Trilinos_ENABLE_MueLu=ON
     -D MueLu_ENABLE_TESTS=OFF
     -D MueLu_ENABLE_EXAMPLES=OFF
     -D KokkosKernels_ENABLE_Experimental:BOOL=ON
     -D TpetraKernels_ENABLE_Experimental:BOOL=ON
     -D MueLu_ENABLE_Experimental:BOOL=ON
     -D MueLu_ENABLE_Kokkos_Refactor:BOOL=ON
     -D Xpetra_ENABLE_Experimental:BOOL=ON
     -D Xpetra_ENABLE_Kokkos_Refactor:BOOL=ON
     -D Trilinos_ENABLE_Xpetra=ON
     -D Trilinos_ENABLE_Isorropia=ON
     -D Trilinos_ENABLE_Galeri=ON
     -D Trilinos_ENABLE_Teuchos=ON
     -D Trilinos_ENABLE_Epetra=ON
     -D Trilinos_ENABLE_EpetraExt=ON
     -D Trilinos_ENABLE_Anasazi=ON
     -D Anasazi_ENABLE_RBGen=ON
     -D Trilinos_ENABLE_Stokhos=OFF
     -D Trilinos_ENABLE_Amesos2=ON
     -D Amesos2_ENABLE_KLU2=ON
     -D Trilinos_ENABLE_Ifpack2=ON
     -D Trilinos_ENABLE_Zoltan2=ON
EOM

#      -D Trilinos_ENABLE_SEACASExo2mat=OFF
#      -D Trilinos_ENABLE_SEACASMat2exo=OFF


#
#      -D CMAKE_SKIP_RULE_DEPENDENCY=OFF
#      -D Trilinos_ENABLE_STRONG_CXX_COMPILE_WARNINGS=OFF
#      -D Trilinos_ENABLE_STRONG_C_COMPILE_WARNINGS=OFF
#      -D Trilinos_ENABLE_SHADOW_WARNINGS=ON
#      -D Trilinos_ENABLE_INSTALL_CMAKE_CONFIG_FILES:BOOL=ON
#      -D Trilinos_DEPS_XML_OUTPUT_FILE:FILEPATH=""
#      -D Trilinos_ENABLE_EXPORT_MAKEFILES:BOOL=OFF


let cores=CORES_PER_TEST/HT_PER_CORE
export BLAS_LAPACK_LIBRARY_DIRS=${BLAS_DIRS}
export BLAS_LAPACK_LIBRARY_NAMES=${BLAS_LIBRARIES}

HDF5_LIBRARY_NAMES="hdf5hl_fortran;hdf5_fortran;hdf5_hl;hdf5"
#--------------------------------------------------
#--------------------------------------------------


# quick hack to dump cmake configure line
read -r -d '' CMAKE_TPLS <<- EOM
-D TPL_ENABLE_MPI=ON
  -D MPI_EXEC:PATH="srun" 
  -D MPI_EXEC_NUMPROCS_FLAG:STRING="-c;8;--cpu_bind=cores;-n"
\
-D TPL_ENABLE_BLAS=ON
   -D BLAS_LIBRARY_DIRS:PATH="${BLAS_LAPACK_LIBRARY_DIRS}"
   -D BLAS_LIBRARY_NAMES:STRING="${BLAS_LAPACK_LIBRARY_NAMES}"
-D TPL_ENABLE_LAPACK=ON
   -D LAPACK_LIBRARY_DIRS:PATH="${BLAS_LAPACK_LIBRARY_DIRS}"
   -D LAPACK_LIBRARY_NAMES:STRING="${BLAS_LAPACK_LIBRARY_NAMES}"
\
-D TPL_ENABLE_Zlib=ON
-D TPL_ENABLE_DLlib=ON
\
-D TPL_ENABLE_yaml-cpp=ON
   -D yaml-cpp_LIBRARY_DIRS:PATH=${YAMLCPP_ROOT}/lib
   -D yaml-cpp_INCLUDE_DIRS:PATH=${YAMLCPP_ROOT}/include
\
-D TPL_ENABLE_Boost=ON
   -D Boost_INCLUDE_DIRS:PATH="${BOOST_ROOT}/include"
   -D Boost_LIBRARY_DIRS:PATH="${BOOST_ROOT}/lib"
-D TPL_ENABLE_BoostLib=ON
   -D BoostLib_INCLUDE_DIRS:PATH="${BOOST_ROOT}/include"
   -D BoostLib_LIBRARY_DIRS:PATH="${BOOST_ROOT}/lib"
\
-D TPL_ENABLE_Netcdf=ON
  -D Netcdf_INCLUDE_DIRS:PATH="${PNETCDF_ROOT}/include;${NETCDF_ROOT}/include"
  -D Netcdf_LIBRARY_DIRS:PATH="${PNETCDF_ROOT}/lib;${NETCDF_ROOT}/lib;${HDF5_ROOT}/lib"
  -D Netcdf_LIBRARY_NAMES:STRING="netcdf;pnetcdf;${HDF5_LIBRARY_NAMES};z"
  -D TPL_Netcdf_Enables_Netcdf4:BOOL=ON
  -D TPL_Netcdf_Enables_PNetcdf:BOOL=ON
  -D TPL_Netcdf_PARALLEL:BOOL=ON
-D TPL_ENABLE_HDF5=ON
  -D HDF5_INCLUDE_DIRS:PATH="${HDF5_ROOT}/include"
  -D HDF5_LIBRARY_DIRS:PATH="${HDF5_ROOT}/lib"
  -D HDF5_LIBRARY_NAMES:STRING="${HDF5_LIBRARY_NAMES};z"
\
-D TPL_ENABLE_METIS=OFF
  -D METIS_INCLUDE_DIRS:PATH="${METIS_ROOT}/include"
  -D METIS_LIBRARY_DIRS:PATH="${METIS_ROOT}/lib"
-D TPL_ENABLE_ParMETIS=OFF
  -D ParMETIS_INCLUDE_DIRS:PATH="${PARMETIS_ROOT}/include;${METIS_ROOT}/include"
  -D ParMETIS_LIBRARY_DIRS:PATH="${PARMETIS_ROOT}/lib;${METIS_ROOT}/lib"
  -D ParMETIS_LIBRARY_NAMES:STRING="parmetis;metis"
EOM


read -r -d '' CMAKE_MAIN <<- EOM
-D Trilinos_LINK_SEARCH_START_STATIC:BOOL=ON
-D MPI_USE_COMPILER_WRAPPERS=OFF
-D CMAKE_CXX_COMPILER="CC"
-D CMAKE_C_COMPILER="cc"
-D CMAKE_CXX_FLAGS="${JENKINS_ARCH_CXX_FLAG} -g1"
-D CMAKE_C_FLAGS="${JENKINS_ARCH_C_FLAG} -g1"
-D CMAKE_Fortran_FLAGS="${JENKINS_ARCH_C_FLAG} -g1"
-D CMAKE_EXE_LINKER_FLAGS="${JENKINS_ARCH_C_FLAG} ${EXTRA_LINKER_OPTS}"
-D CMAKE_Fortran_COMPILER="ftn"
\
-D HAVE_GCC_ABI_DEMANGLE:BOOL=TRUE
\
-D Trilinos_ENABLE_EXPLICIT_INSTANTIATION:BOOL=ON
-D Trilinos_ENABLE_DEBUG:BOOL=OFF
\
-D CMAKE_INSTALL_PREFIX:PATH="${TRILINOS_INSTALL}"
-D Trilinos_ENABLE_INSTALL_CMAKE_CONFIG_FILES:BOOL=ON
-D CMAKE_BUILD_TYPE:STRING=RELEASE
-D CMAKE_VERBOSE_MAKEFILE:BOOL=OFF
-D Trilinos_ENABLE_ALL_PACKAGES:BOOL=OFF
-D Trilinos_ENABLE_ALL_OPTIONAL_PACKAGES:BOOL=ON
-D Trilinos_ENABLE_TESTS:BOOL=OFF
-D Trilinos_ENABLE_EXAMPLES:BOOL=OFF
-D BUILD_SHARED_LIBS:BOOL=OFF
-D Trilinos_SET_INSTALL_RPATH=OFF
-D DART_TESTING_TIMEOUT:STRING=200
-D Trilinos_ENABLE_CXX11=ON
\
${CMAKE_TPLS}
\
-D Trilinos_ENABLE_Kokkos=ON
  -D Kokkos_ENABLE_TESTS:BOOL=ON
  -D Trilinos_ENABLE_OpenMP=${OPENMP}
  -D Kokkos_ENABLE_Serial:BOOL=${SERIAL}
  -D Kokkos_ENABLE_OpenMP:BOOL=${OPENMP}
  -D Kokkos_ENABLE_Pthread:BOOL=${PTHREAD}
  -D Kokkos_ENABLE_Cuda:BOOL=${CUDA}
  -D TPL_ENABLE_Pthread=${PTHREAD}
  -D TPL_ENABLE_CUDA=${CUDA}
  -D Kokkos_ENABLE_Cuda_UVM:BOOL=ON
-D Teuchos_ENABLE_COMPLEX=${COMPLEX}
\
-D Trilinos_ENABLE_Tpetra=ON
  -D Tpetra_INST_SERIAL:BOOL=${SERIAL}
  -D Tpetra_INST_OPENMP:BOOL=${OPENMP}
  -D Tpetra_INST_PTHREAD:BOOL=${PTHREAD}
  -D Tpetra_INST_CUDA:BOOL=${CUDA}
  -D Tpetra_INST_COMPLEX_DOUBLE:BOOL=${COMPLEX}
  -D Tpetra_ENABLE_TESTS:BOOL=${TESTS}
  -D Tpetra_ENABLE_EXAMPLES:BOOL=${EXAMPLES}
\
-D Trilinos_ENABLE_Belos=ON
${MUELU_DETAILS}
\
${TRILINOS_PATH}
EOM

echo -e "cmake ${CMAKE_MAIN}"

time \
cmake \
-G "Unix Makefiles" \
\
-D Trilinos_LINK_SEARCH_START_STATIC:BOOL=ON \
-D MPI_USE_COMPILER_WRAPPERS=OFF \
-D CMAKE_CXX_COMPILER="CC" \
-D CMAKE_C_COMPILER="cc" \
-D CMAKE_CXX_FLAGS="${JENKINS_ARCH_CXX_FLAG} -g1" \
-D CMAKE_C_FLAGS="${JENKINS_ARCH_C_FLAG} -g1" \
-D CMAKE_Fortran_FLAGS="${JENKINS_ARCH_C_FLAG} -g1" \
-D Trilinos_EXTRA_LINK_FLAGS="${EXTRA_LINKER_OPTS}" \
-D CMAKE_Fortran_COMPILER="ftn" \
\
-D HAVE_GCC_ABI_DEMANGLE:BOOL=TRUE \
\
-D Trilinos_ENABLE_EXPLICIT_INSTANTIATION:BOOL=ON \
-D Trilinos_ENABLE_DEBUG:BOOL=OFF \
\
-D CMAKE_INSTALL_PREFIX:PATH="${TRILINOS_INSTALL}" \
-D Trilinos_ENABLE_INSTALL_CMAKE_CONFIG_FILES:BOOL=ON \
-D CMAKE_BUILD_TYPE:STRING=RELEASE \
-D CMAKE_VERBOSE_MAKEFILE:BOOL=OFF \
-D Trilinos_ENABLE_ALL_PACKAGES:BOOL=OFF \
-D Trilinos_ENABLE_ALL_OPTIONAL_PACKAGES:BOOL=ON \
-D Trilinos_ENABLE_TESTS:BOOL=OFF \
-D Trilinos_ENABLE_EXAMPLES:BOOL=OFF \
-D BUILD_SHARED_LIBS:BOOL=OFF \
-D Trilinos_SET_INSTALL_RPATH=OFF \
-D DART_TESTING_TIMEOUT:STRING=200 \
-D Trilinos_ENABLE_CXX11=ON \
\
-D TPL_ENABLE_MPI=ON \
  -D MPI_EXEC:PATH="srun" \
  -D MPI_EXEC_NUMPROCS_FLAG:STRING="-c;8;--cpu_bind=cores;-n" \
\
-D TPL_ENABLE_BLAS=ON \
   -D BLAS_LIBRARY_DIRS:PATH="${BLAS_LAPACK_LIBRARY_DIRS}" \
   -D BLAS_LIBRARY_NAMES:STRING="${BLAS_LAPACK_LIBRARY_NAMES}" \
-D TPL_ENABLE_LAPACK=ON \
   -D LAPACK_LIBRARY_DIRS:PATH="${BLAS_LAPACK_LIBRARY_DIRS}" \
   -D LAPACK_LIBRARY_NAMES:STRING="${BLAS_LAPACK_LIBRARY_NAMES}" \
\
-D TPL_ENABLE_Zlib=ON \
-D TPL_ENABLE_DLlib=ON \
\
-D TPL_ENABLE_yaml-cpp=ON \
   -D yaml-cpp_LIBRARY_DIRS:PATH=${YAMLCPP_ROOT}/lib \
   -D yaml-cpp_INCLUDE_DIRS:PATH=${YAMLCPP_ROOT}/include \
\
-D TPL_ENABLE_Boost=ON \
   -D Boost_INCLUDE_DIRS:PATH="${BOOST_ROOT}/include" \
   -D Boost_LIBRARY_DIRS:PATH="${BOOST_ROOT}/lib" \
-D TPL_ENABLE_BoostLib=ON \
   -D BoostLib_INCLUDE_DIRS:PATH="${BOOST_ROOT}/include" \
   -D BoostLib_LIBRARY_DIRS:PATH="${BOOST_ROOT}/lib" \
\
-D TPL_ENABLE_Netcdf=OFF \
  -D Netcdf_INCLUDE_DIRS:PATH="${PNETCDF_ROOT}/include;${NETCDF_ROOT}/include" \
  -D Netcdf_LIBRARY_DIRS:PATH="${PNETCDF_ROOT}/lib;${NETCDF_ROOT}/lib;${HDF5_ROOT}/lib" \
  -D Netcdf_LIBRARY_NAMES:STRING="netcdf;pnetcdf;${HDF5_LIBRARY_NAMES};z" \
  -D TPL_Netcdf_Enables_Netcdf4:BOOL=ON \
  -D TPL_Netcdf_Enables_PNetcdf:BOOL=ON \
  -D TPL_Netcdf_PARALLEL:BOOL=ON \
 \
-D TPL_ENABLE_HDF5=OFF \
  -D HDF5_INCLUDE_DIRS:PATH="${HDF5_ROOT}/include" \
  -D HDF5_LIBRARY_DIRS:PATH="${HDF5_ROOT}/lib" \
  -D HDF5_LIBRARY_NAMES:STRING="${HDF5_LIBRARY_NAMES};z" \
\
-D TPL_ENABLE_METIS=OFF \
  -D METIS_INCLUDE_DIRS:PATH="${METIS_ROOT}/include" \
  -D METIS_LIBRARY_DIRS:PATH="${METIS_ROOT}/lib" \
-D TPL_ENABLE_ParMETIS=OFF \
  -D ParMETIS_INCLUDE_DIRS:PATH="${PARMETIS_ROOT}/include;${METIS_ROOT}/include" \
  -D ParMETIS_LIBRARY_DIRS:PATH="${PARMETIS_ROOT}/lib;${METIS_ROOT}/lib" \
  -D ParMETIS_LIBRARY_NAMES:STRING="parmetis;metis" \
\
-D Trilinos_ENABLE_Kokkos=ON \
  -D Kokkos_ENABLE_TESTS:BOOL=ON \
  -D Trilinos_ENABLE_OpenMP=${OPENMP} \
  -D Kokkos_ENABLE_Serial:BOOL=${SERIAL} \
  -D Kokkos_ENABLE_OpenMP:BOOL=${OPENMP} \
  -D Kokkos_ENABLE_Pthread:BOOL=${PTHREAD} \
  -D Kokkos_ENABLE_Cuda:BOOL=${CUDA} \
  -D TPL_ENABLE_Pthread=${PTHREAD} \
  -D TPL_ENABLE_CUDA=${CUDA} \
  -D Kokkos_ENABLE_Cuda_UVM:BOOL=ON \
-D Teuchos_ENABLE_COMPLEX=${COMPLEX} \
\
-D Trilinos_ENABLE_Tpetra=ON \
  -D Tpetra_INST_SERIAL:BOOL=${SERIAL} \
  -D Tpetra_INST_OPENMP:BOOL=${OPENMP} \
  -D Tpetra_INST_PTHREAD:BOOL=${PTHREAD} \
  -D Tpetra_INST_CUDA:BOOL=${CUDA} \
  -D Tpetra_INST_COMPLEX_DOUBLE:BOOL=${COMPLEX} \
  -D Tpetra_ENABLE_TESTS:BOOL=${TESTS} \
  -D Tpetra_ENABLE_EXAMPLES:BOOL=${EXAMPLES} \
\
-D Trilinos_ENABLE_Belos=ON \
${MUELU_DETAILS} \
\
${TRILINOS_PATH}


echo "INSTALL: ${TRILINOS_INSTALL}"
